include "../base/base.pav"

var names = Dict()
set(names, "one",   "1")
set(names, "two",   "2")
set(names, "three", "3")
set(names, "four",  "4")
set(names, "five",  "5")
set(names, "six",   "6")
set(names, "seven", "7")
set(names, "eight", "8")
set(names, "nine",  "9")

function find_first(line, names)
  for start = 0, start < len(line), start += 1 do
    if is_digit(get(line, start)) then
      return get(line, start)
    end
    for to = start + 3, start + to < len(line) & to < start + 6, to += 1 do
      if contains(names, slice(line, start, to)) then
        return get(names, slice(line, start, to))
      end
    end
  end
end

function find_last(line, names)
  for to = len(line), to >= 0, to -= 1 do
    if to < len(line) & is_digit(get(line, to)) then
      return get(line, to)
    end
    for start = to - 2, start >= 0 & start > to - 6, start -= 1 do
      if contains(names, slice(line, start, to)) then
        return get(names, slice(line, start, to))
      end
    end
  end
end

function get_number(line, names)
  return int(find_first(line, names) + find_last(line, names))
end

function solve(file, names)
  return sum(map(split(read_file(file), "\n"), function(line)
                                                 return get_number(line, names)
                                               end))
end

for i = 2, i < len(_args()), i += 1 do
  println(solve(get(_args(), i), Dict()))
  println(solve(get(_args(), i), names))
end
